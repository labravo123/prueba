# -*- coding: utf-8 -*-
"""streamlit_app_bokeh.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aEXIHLHAYmq3AcjyR5qBnmHaLF79cajG
"""

# streamlit_app_bokeh.py
"" "
Una aplicación optimizada para dibujar un círculo de Mohr según la entrada del usuario
usando la biblioteca de trazado de Bokeh
"" "

importar numpy como np
importar streamlit como st
de bokeh.plotting importar figura
de user_funcs importar mohr_c, c_array, X_Y

st.title ("Aplicación Círculo de Mohr")

stress_x = st.sidebar.number_input ("estrés en x", valor = 2.0, paso = 0.1)
stress_y = st.sidebar.number_input ("estrés en y", valor = 5.0, paso = 0.1)
shear = st.sidebar.number_input ("shear xy", valor = 4.0, paso = 0.1)

# buscar centro y radio
C, R = mohr_c (tensión_x, tensión_y, corte)

# construir matrices trazar círculo
círculo_x, círculo_y = c_array (C, R)

# construir matrices para trazar la línea a través del círculo
X, Y = X_Y (tensión_x, tensión_y, corte)

st.sidebar.markdown (f "tensión máxima = {round (C + R, 2)}")
st.sidebar.markdown (f "tensión mínima = {round (CR, 2)}")
st.sidebar.markdown (f "cizallamiento máximo = {round (R, 2)}")

p = figura (
    title = "Círculo de Mohr",
    x_axis_label = "estrés",
    y_axis_label = "cortante",
    match_aspect = Verdadero,
    tools = "pan, reset, save, wheel_zoom",
)

p.line (circle_x, circle_y, color = "# 1f77b4", line_width = 3, line_alpha = 0.6)
p.line (X, Y, color = "# ff7f0e", line_width = 3, line_alpha = 0.6)

p.xaxis.fixed_location = 0
p.yaxis.fixed_location = 0

st.bokeh_chart (p)